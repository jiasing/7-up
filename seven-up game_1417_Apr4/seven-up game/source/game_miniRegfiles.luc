//the regfile for all game information
module game_miniRegfiles (
    input clk,  // clock
    input rst,  // reset
    input write_address[4], // write address
    input we, // write enable
    input data[16], // data in
    
    
    input read_address_a[4], //address port a 
    input read_address_b[4], //address port b
    output out_a[16], //read port a
    output out_b[16], //read port b
    
    //debug
    output timer[16],
    output curr_level[4],
    output curr_score[16],
    output curr_highscore[16]

  ) 

{
  .clk(clk){
    .rst(rst){    
      dff current_score[16](#INIT(1));
      dff button_pressed_by_user[16](#INIT(0));
      dff check_correct_button[16](#INIT(0));
      dff highscore[16](#INIT(0));
      dff check_new_highscore[16](#INIT(0));
      dff game_timer[16](#INIT(0));
      dff next_level_score[16](#INIT(0)); 
      dff current_level[16](#INIT(0));
      dff check_level_up[16](#INIT(0));
      dff temp_var[16](#INIT(0));
      
    }
  }

  always {
  
    //write port
    if (we){
      case(write_address){
        b0000 : current_score.d = data;
        b0001 : button_pressed_by_user.d = data;
        b0010 : check_correct_button.d = data;
        b0011 : highscore.d = data;
        b0100 : check_new_highscore.d = data;
        b0101 : game_timer.d = data;
        b0110 : next_level_score.d = data;
        b0111 : current_level.d = data;
        b1000 : check_level_up.d = data;
        b1111 : temp_var.d = data;
      }
    }
    
      
    //read port a
    case(read_address_a){
        b0000 : out_a = current_score.q;
        b0001 : out_a = button_pressed_by_user.q;
        b0010 : out_a = check_correct_button.q;
        b0011 : out_a = highscore.q;
        b0100 : out_a = check_new_highscore.q;
        b0101 : out_a = game_timer.q;
        b0110 : out_a = next_level_score.q;
        b0111 : out_a = current_level.q;
        b1000 : out_a = check_level_up.q;
        b1111 : out_a = temp_var.q;
        default : out_a = 0;
    }
    
    //read port b
    case(read_address_b){
        b0000 : out_b = current_score.q;
        b0001 : out_b = button_pressed_by_user.q;
        b0010 : out_b = check_correct_button.q;
        b0011 : out_b = highscore.q;
        b0100 : out_b = check_new_highscore.q;
        b0101 : out_b = game_timer.q;
        b0110 : out_b = next_level_score.q;
        b0111 : out_b = current_level.q;
        b1000 : out_b = check_level_up.q;  
        b1111 : out_b = temp_var.q;
        default : out_b = 0;
    }
      
    
    
    //For debugging
    curr_score[15:0] = current_score.q;
    timer = game_timer.q;
    curr_level = current_level.q;
    curr_highscore = highscore.q;
  }
}
